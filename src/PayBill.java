/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import javax.swing.*;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.List;
import java.io.*;

/**
 *
 * @author jessicamorcos
 */
public class PayBill extends javax.swing.JFrame {
    private User user;
    private List<User> users;
    private int money;
    private ButtonGroup group = new ButtonGroup();

    /**
     * Creates new form PayBill
     */
    public PayBill(User user, List<User> users) {
        this.user = user;
        this.users = users;

        initComponents();
        accountBalance.setText("$" + user.getCheckingsBalance());
        payee1ToggleButton.setActionCommand("payee1");
        payee2ToggleButton.setActionCommand("payee2");
        payee3ToggleButton.setActionCommand("payee3");
        payee4ToggleButton.setActionCommand("payee4");
        payee1ToggleButton.setText(user.getPayees().get(0).getPayeeCompany());
        payee2ToggleButton.setText(user.getPayees().get(1).getPayeeCompany());
        payee3ToggleButton.setText(user.getPayees().get(2).getPayeeCompany());
        payee4ToggleButton.setText(user.getPayees().get(3).getPayeeCompany());
        group.add(payee1ToggleButton);
        group.add(payee2ToggleButton);
        group.add(payee3ToggleButton);
        group.add(payee4ToggleButton);
    }
    public PayBill( List<User> users) {
        this.users = users;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainPanel = new javax.swing.JPanel();
        FrameLabel = new javax.swing.JPanel();
        PayBillLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        FunctionalityPanel = new javax.swing.JPanel();
        payee1ToggleButton = new javax.swing.JToggleButton();
        payee2ToggleButton = new javax.swing.JToggleButton();
        payee3ToggleButton = new javax.swing.JToggleButton();
        payee4ToggleButton = new javax.swing.JToggleButton();
        optionMenuButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        payeeTextLabel = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        accountBalance = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        TransferFromLabel = new javax.swing.JLabel();
        accComboBox = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        amountTextBox = new javax.swing.JTextField();
        TransferAmountLabel = new javax.swing.JLabel();
        payBillsButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        MainPanel.setPreferredSize(new java.awt.Dimension(734, 394));

        PayBillLabel.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        PayBillLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PayBillLabel.setText("PAY BILLS");

        jLabel2.setIcon(new javax.swing.ImageIcon("/Users/titoosemobor/TMU-ComputerSci/JAVA/ATMProject/assets/rsz_4rsz_1rsz_metcash-high-resolution-logo-black-on-transparent-background.png")); // NOI18N

        javax.swing.GroupLayout FrameLabelLayout = new javax.swing.GroupLayout(FrameLabel);
        FrameLabel.setLayout(FrameLabelLayout);
        FrameLabelLayout.setHorizontalGroup(
            FrameLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameLabelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(213, 213, 213)
                .addComponent(PayBillLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        FrameLabelLayout.setVerticalGroup(
            FrameLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FrameLabelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FrameLabelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(PayBillLabel))
        );

        payee1ToggleButton.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        payee1ToggleButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        payee1ToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payee1ToggleButtonActionPerformed(evt);
            }
        });

        payee2ToggleButton.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        payee2ToggleButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        payee2ToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payee2ToggleButtonActionPerformed(evt);
            }
        });

        payee3ToggleButton.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        payee3ToggleButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        payee3ToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payee3ToggleButtonActionPerformed(evt);
            }
        });

        payee4ToggleButton.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        payee4ToggleButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        payee4ToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payee4ToggleButtonActionPerformed(evt);
            }
        });

        optionMenuButton.setFont(new java.awt.Font("SansSerif", 1, 19)); // NOI18N
        optionMenuButton.setText("< Option Menu");
        optionMenuButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        optionMenuButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        optionMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionMenuButtonActionPerformed(evt);
            }
        });

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        payeeTextLabel.setEditable(false);
        payeeTextLabel.setColumns(20);
        payeeTextLabel.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        payeeTextLabel.setRows(5);
        jScrollPane1.setViewportView(payeeTextLabel);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, null, new java.awt.Color(153, 153, 153)));

        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel1.setText("Balance:");

        accountBalance.setFont(new java.awt.Font("SansSerif", 1, 20)); // NOI18N
        accountBalance.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        accountBalance.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(accountBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(accountBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        TransferFromLabel.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        TransferFromLabel.setText("Transfer From:");

        accComboBox.setFont(new java.awt.Font("SansSerif", 0, 13)); // NOI18N
        accComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Checkings Account", "Savings Account" }));
        accComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(TransferFromLabel)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(accComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, 184, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(TransferFromLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(accComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        amountTextBox.setFont(new java.awt.Font("SansSerif", 0, 13)); // NOI18N

        TransferAmountLabel.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        TransferAmountLabel.setText("Transer Amount: ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(amountTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(TransferAmountLabel)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(TransferAmountLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(amountTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        payBillsButton.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        payBillsButton.setText("Pay Bill");
        payBillsButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        payBillsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payBillsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FunctionalityPanelLayout = new javax.swing.GroupLayout(FunctionalityPanel);
        FunctionalityPanel.setLayout(FunctionalityPanelLayout);
        FunctionalityPanelLayout.setHorizontalGroup(
            FunctionalityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FunctionalityPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(FunctionalityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(optionMenuButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(FunctionalityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FunctionalityPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(FunctionalityPanelLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(FunctionalityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(payBillsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(FunctionalityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(payee4ToggleButton, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                    .addComponent(payee2ToggleButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(payee1ToggleButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(payee3ToggleButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        FunctionalityPanelLayout.setVerticalGroup(
            FunctionalityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FunctionalityPanelLayout.createSequentialGroup()
                .addGroup(FunctionalityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FunctionalityPanelLayout.createSequentialGroup()
                        .addGroup(FunctionalityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FunctionalityPanelLayout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(payee1ToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(payee2ToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(FunctionalityPanelLayout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(FunctionalityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FunctionalityPanelLayout.createSequentialGroup()
                                .addComponent(payee3ToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(payee4ToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(FunctionalityPanelLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(FunctionalityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(optionMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(payBillsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout MainPanelLayout = new javax.swing.GroupLayout(MainPanel);
        MainPanel.setLayout(MainPanelLayout);
        MainPanelLayout.setHorizontalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(FrameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(FunctionalityPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        MainPanelLayout.setVerticalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addComponent(FrameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FunctionalityPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 741, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void payee1ToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payee1ToggleButtonActionPerformed
        // TODO add your handling code here:
        payeeTextLabel.setText(user.getPayees().get(0).getPayeeCompany()+"\nAmount Owed: $"+user.getPayees().get(0).getMoneyOwed());

    }//GEN-LAST:event_payee1ToggleButtonActionPerformed

    private void payee2ToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payee2ToggleButtonActionPerformed
        // TODO add your handling code here:
        payeeTextLabel.setText(user.getPayees().get(1).getPayeeCompany()+"\nAmount Owed: $"+user.getPayees().get(1).getMoneyOwed());
    }//GEN-LAST:event_payee2ToggleButtonActionPerformed

    private void payee3ToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payee3ToggleButtonActionPerformed
        // TODO add your handling code here:
        payeeTextLabel.setText(user.getPayees().get(2).getPayeeCompany()+"\nAmount Owed: $"+user.getPayees().get(2).getMoneyOwed());
    }//GEN-LAST:event_payee3ToggleButtonActionPerformed

    private void payee4ToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payee4ToggleButtonActionPerformed
        // TODO add your handling code here:
        payeeTextLabel.setText(user.getPayees().get(3).getPayeeCompany()+"\nAmount Owed: $"+user.getPayees().get(3).getMoneyOwed());
    }//GEN-LAST:event_payee4ToggleButtonActionPerformed

    private void optionMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionMenuButtonActionPerformed
        // TODO add your handling code here:
        TransactionMenu menu = new TransactionMenu(user, users);
        menu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_optionMenuButtonActionPerformed

    private void payBillsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payBillsButtonActionPerformed
        // TODO add your handling code here:
        Boolean success = false;
        ButtonModel selected = group.getSelection();
        String moneyS = amountTextBox.getText();
        if (moneyS.isEmpty() || selected == null) {
            JOptionPane.showMessageDialog(this, "Missing Information");
        }
        else if (!moneyS.matches("\\d+")) {
            JOptionPane.showMessageDialog(this, "Invalid Input");
        }
        else {
            money = Integer.parseInt(moneyS);
            String value = selected.getActionCommand();
            String[] balances = new String[4];
            String selectedItem = (String) accComboBox.getSelectedItem();
            assert selectedItem != null;
            if (selectedItem.equals("Checkings Account")) {
                if (checkIfInsufficent(user, money,"Checkings")) {
                    balances=payByCheckings(user,value,money);
                    if(balances[3].equals("Wrong Amount") && money > 0){
                        JOptionPane.showMessageDialog(this, "Wrong Amount");
                    }
                    else if (user.getPayees().get(Integer.parseInt(balances[2])).getMoneyOwed() == 0) {
                        JOptionPane.showMessageDialog(this, "Bill fully paid");
                    }
                    else{
                        user.setCheckingsBalance(Integer.parseInt(balances[0]));
                        addToTransactionHistoryCheckings("$" +String.valueOf(money));
                        user.getPayees().get(Integer.parseInt(balances[2])).setMoneyOwed(Integer.parseInt(balances[1]));
                        accountBalance.setText("$" + String.valueOf(user.getCheckingsBalance()));
                        payeeTextLabel.setText(user.getPayees().get(Integer.parseInt(balances[2])).getPayeeCompany()+"\nAmount Owed: $0");
                        success = true;
                    }
                }
                else {
                    JOptionPane.showMessageDialog(this, "Insufficient funds");
                }
            }
            else{
                if(checkIfInsufficent(user, money,"Savings")) {
                    balances=payBySavings(user,value,money);
                    if(balances[3].equals("Wrong Amount") && money > 0){
                        JOptionPane.showMessageDialog(this, "Wrong Amount");
                    }
                    else if (user.getPayees().get(Integer.parseInt(balances[2])).getMoneyOwed() == 0) {
                        JOptionPane.showMessageDialog(this, "Bill fully paid");
                    }
                    else{
                        user.setSavingsBalance(Integer.parseInt(balances[0]));
                        addToTransactionHistorySavings("$" +String.valueOf(money));
                        user.getPayees().get(Integer.parseInt(balances[2])).setMoneyOwed(Integer.parseInt(balances[1]));
                        accountBalance.setText("$" + String.valueOf(user.getSavingsBalance()));
                        payeeTextLabel.setText(user.getPayees().get(Integer.parseInt(balances[2])).getPayeeCompany()+"\nAmount Owed: $0");
                        success = true;
                    }
                }
                else {
                    JOptionPane.showMessageDialog(this, "Insufficient funds");
                }
            }
        }
        if (success){
            JOptionPane.showMessageDialog(this, "Transfer Successful");
            TransactionMenu menu = new TransactionMenu(user, users);
                menu.setVisible(true);
                this.dispose();
        }

    }//GEN-LAST:event_payBillsButtonActionPerformed
    public boolean checkIfInsufficent(User user, Integer Amount,String Acc){

        if(Acc.equals("Checkings")){
            if (user.getCheckingsBalance() - Amount >=0){
                return true;
            }
        }else{
            if (user.getSavingsBalance() - Amount >=0){
                return true;
            }
        }
        return false;
    }
    public String[] payByCheckings(User user,String value, Integer money){
        String[] balances = {"","","",""};
        Integer userBalance= user.getCheckingsBalance();
        Integer payeeAmount= 0;
        switch (value) {
            case "payee1":
                if (money != user.getPayees().get(0).getMoneyOwed()) {
                    balances[3]="Wrong Amount";

                }
                else {
                    userBalance -= money;
                    payeeAmount = user.getPayees().get(0).getMoneyOwed() - money;
                    balances[0]=String.valueOf(userBalance);
                    balances[1]=String.valueOf(payeeAmount);
                    balances[2]="0";
                    balances[3]="";
                }
                break;

            case "payee2":
                if (money != user.getPayees().get(1).getMoneyOwed()) {
                    balances[3]="Wrong Amount";
                }
                else {
                    userBalance -= money;
                    payeeAmount = user.getPayees().get(1).getMoneyOwed() - money;
                    balances[0]=String.valueOf(userBalance);
                    balances[1]=String.valueOf(payeeAmount);
                    balances[2]="1";
                    balances[3]="";
                }
                break;
            case "payee3":
                if (money != user.getPayees().get(2).getMoneyOwed()) {
                    balances[3]="Wrong Amount";
                }
                else {
                    userBalance -= money;
                    payeeAmount = user.getPayees().get(2).getMoneyOwed() - money;
                    balances[0]=String.valueOf(userBalance);
                    balances[1]=String.valueOf(payeeAmount);
                    balances[2]="2";
                    balances[3]="";
                }
                break;
            case "payee4":
                if (money != user.getPayees().get(3).getMoneyOwed()) {
                    balances[3]="Wrong Amount";
                }
                else {
                    userBalance -= money;
                    payeeAmount = user.getPayees().get(3).getMoneyOwed() - money;
                    balances[0]=String.valueOf(userBalance);
                    balances[1]=String.valueOf(payeeAmount);
                    balances[2]="3";
                    balances[3]="";
                }
                break;
        }
        return balances;
    }

    public String[] payBySavings(User user,String value, Integer money){
        String[] balances = {"","","",""};
        Integer userBalance= user.getSavingsBalance();
        Integer payeeAmount= 0;
        switch (value) {
            case "payee1":
                if (money != user.getPayees().get(0).getMoneyOwed()) {
                    balances[3]="Wrong Amount";

                }
                else {
                    userBalance -= money;
                    payeeAmount = user.getPayees().get(0).getMoneyOwed() - money;
                    balances[0]=String.valueOf(userBalance);
                    balances[1]=String.valueOf(payeeAmount);
                    balances[2]="0";
                    balances[3]="";
                }
                break;

            case "payee2":
                if (money != user.getPayees().get(1).getMoneyOwed()) {
                    balances[3]="Wrong Amount";
                }
                else {
                    userBalance -= money;
                    payeeAmount = user.getPayees().get(1).getMoneyOwed() - money;
                    balances[0]=String.valueOf(userBalance);
                    balances[1]=String.valueOf(payeeAmount);
                    balances[2]="1";
                    balances[3]="";
                }
                break;
            case "payee3":
                if (money != user.getPayees().get(2).getMoneyOwed()) {
                    balances[3]="Wrong Amount";
                }
                else {
                    userBalance -= money;
                    payeeAmount = user.getPayees().get(2).getMoneyOwed() - money;
                    balances[0]=String.valueOf(userBalance);
                    balances[1]=String.valueOf(payeeAmount);
                    balances[2]="2";
                    balances[3]="";
                }
                break;
            case "payee4":
                if (money != user.getPayees().get(3).getMoneyOwed()) {
                    balances[3]="Wrong Amount";
                }
                else {
                    userBalance -= money;
                    payeeAmount = user.getPayees().get(3).getMoneyOwed() - money;
                    balances[0]=String.valueOf(userBalance);
                    balances[1]=String.valueOf(payeeAmount);
                    balances[2]="3";
                    balances[3]="";

                }
                break;
        }
        return balances;
    }

    private void accComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accComboBoxActionPerformed
        // TODO add your handling code here:
        String selectedItem = (String) accComboBox.getSelectedItem();
        if (selectedItem.equals("Checkings Account")) {
            accountBalance.setText("$" + String.valueOf(user.getCheckingsBalance()));
        } else {
            accountBalance.setText("$" + String.valueOf(user.getSavingsBalance()));
        }
    }//GEN-LAST:event_accComboBoxActionPerformed

    public void addToTransactionHistoryCheckings(String value){
        // Get the current date and time
        LocalDateTime now = LocalDateTime.now();

        // Format the date and time as a string
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");
        String formattedDateTime = now.format(formatter);

        try {
            // Open the file in append mode
            FileWriter fw = new FileWriter(user.getTransactionPaper(), true);
            BufferedWriter bw = new BufferedWriter(fw);

            // Append some data to the file
            bw.write("Bill Payment/"+value+"/Checkings/"+formattedDateTime+"\n");

            // Close the writers
            bw.close();
            fw.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    public void addToTransactionHistorySavings(String value){
        // Get the current date and time
        LocalDateTime now = LocalDateTime.now();

        // Format the date and time as a string
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");
        String formattedDateTime = now.format(formatter);

        try {
            // Open the file in append mode
            FileWriter fw = new FileWriter(user.getTransactionPaper(), true);
            BufferedWriter bw = new BufferedWriter(fw);

            // Append some data to the file
            bw.write("Bill Payment/"+value+"/Savings/"+formattedDateTime+"\n");

            // Close the writers
            bw.close();
            fw.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel FrameLabel;
    private javax.swing.JPanel FunctionalityPanel;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JLabel PayBillLabel;
    private javax.swing.JLabel TransferAmountLabel;
    private javax.swing.JLabel TransferFromLabel;
    private javax.swing.JComboBox<String> accComboBox;
    private javax.swing.JLabel accountBalance;
    private javax.swing.JTextField amountTextBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton optionMenuButton;
    private javax.swing.JButton payBillsButton;
    private javax.swing.JToggleButton payee1ToggleButton;
    private javax.swing.JToggleButton payee2ToggleButton;
    private javax.swing.JToggleButton payee3ToggleButton;
    private javax.swing.JToggleButton payee4ToggleButton;
    private javax.swing.JTextArea payeeTextLabel;
    // End of variables declaration//GEN-END:variables

}