/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import javax.swing.*;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.List;

/**
 *
 * @author jessicamorcos
 */
public class Withdraw extends javax.swing.JFrame {
    private User user;
    private List<User> users;

    private ButtonGroup group = new ButtonGroup();

    /**
     * Creates new form WithDraw1
     */
    public Withdraw(User user, List<User> users) {
        this.user = user;
        this.users = users;


        initComponents();
        balanceText.setText("$" + String.valueOf(user.getCheckingsBalance()));
        twentyButton.setActionCommand("20");
        fourtyButton.setActionCommand("40");
        eightyButton.setActionCommand("80");
        hundredButton.setActionCommand("100");
        twoHundredButton.setActionCommand("200");
        threeHundredButton.setActionCommand("300");
        group.add(twentyButton);
        group.add(fourtyButton);
        group.add(eightyButton);
        group.add(hundredButton);
        group.add(twoHundredButton);
        group.add(threeHundredButton);
    } public Withdraw(List<User> users) {
        this.users = users;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        confirmButton = new javax.swing.JButton();
        optionMenuButton = new javax.swing.JButton();
        currentBalancePanel = new javax.swing.JPanel();
        balanceText = new javax.swing.JLabel();
        currentBalanceTitle = new javax.swing.JLabel();
        withdrawFromText = new javax.swing.JLabel();
        accountComboBox = new javax.swing.JComboBox<>();
        twentyButton = new javax.swing.JToggleButton();
        fourtyButton = new javax.swing.JToggleButton();
        eightyButton = new javax.swing.JToggleButton();
        hundredButton = new javax.swing.JToggleButton();
        twoHundredButton = new javax.swing.JToggleButton();
        threeHundredButton = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("METCash");
        setResizable(false);

        jPanel3.setPreferredSize(new java.awt.Dimension(734, 394));

        jPanel4.setPreferredSize(new java.awt.Dimension(734, 62));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("WITHDRAW");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel3.setIcon(new javax.swing.ImageIcon("/Users/titoosemobor/TMU-ComputerSci/JAVA/ATMProject/assets/rsz_4rsz_1rsz_metcash-high-resolution-logo-black-on-transparent-background.png")); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(221, 221, 221)
                .addComponent(jLabel1)
                .addContainerGap(286, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 32, Short.MAX_VALUE)
                .addComponent(jLabel1))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        confirmButton.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        confirmButton.setText("Confirm");
        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonActionPerformed(evt);
            }
        });

        optionMenuButton.setFont(new java.awt.Font("SansSerif", 1, 19)); // NOI18N
        optionMenuButton.setText("< Option Menu");
        optionMenuButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        optionMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionMenuButtonActionPerformed(evt);
            }
        });

        currentBalancePanel.setBackground(new java.awt.Color(220, 220, 220));
        currentBalancePanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        balanceText.setFont(new java.awt.Font("SansSerif", 1, 30)); // NOI18N
        balanceText.setForeground(new java.awt.Color(51, 51, 51));
        balanceText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout currentBalancePanelLayout = new javax.swing.GroupLayout(currentBalancePanel);
        currentBalancePanel.setLayout(currentBalancePanelLayout);
        currentBalancePanelLayout.setHorizontalGroup(
            currentBalancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(currentBalancePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(balanceText, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                .addContainerGap())
        );
        currentBalancePanelLayout.setVerticalGroup(
            currentBalancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(currentBalancePanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(balanceText, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        currentBalanceTitle.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        currentBalanceTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        currentBalanceTitle.setText("Current Balance:");
        currentBalanceTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        withdrawFromText.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        withdrawFromText.setText("Withdraw From:");

        accountComboBox.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        accountComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Checkings Account", "Savings Account" }));
        accountComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountComboBoxActionPerformed(evt);
            }
        });

        twentyButton.setBackground(new java.awt.Color(153, 153, 153));
        twentyButton.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        twentyButton.setText("< $20");

        fourtyButton.setBackground(new java.awt.Color(153, 153, 153));
        fourtyButton.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        fourtyButton.setText("< $40");

        eightyButton.setBackground(new java.awt.Color(153, 153, 153));
        eightyButton.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        eightyButton.setText("< $80");

        hundredButton.setBackground(new java.awt.Color(153, 153, 153));
        hundredButton.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        hundredButton.setText("    $100 >");

        twoHundredButton.setBackground(new java.awt.Color(153, 153, 153));
        twoHundredButton.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        twoHundredButton.setText("    $200 >");

        threeHundredButton.setBackground(new java.awt.Color(153, 153, 153));
        threeHundredButton.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        threeHundredButton.setText("    $300 >");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(158, 158, 158)
                .addComponent(withdrawFromText)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(accountComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(optionMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 18, Short.MAX_VALUE))
                    .addComponent(twentyButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fourtyButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(eightyButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(51, 51, 51)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(currentBalanceTitle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(currentBalancePanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confirmButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hundredButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(twoHundredButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(threeHundredButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(withdrawFromText)
                    .addComponent(accountComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addComponent(twentyButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fourtyButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(eightyButton)
                        .addGap(32, 32, 32)
                        .addComponent(optionMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(currentBalanceTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(currentBalancePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(hundredButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(twoHundredButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(threeHundredButton)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(confirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 715, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, 715, 715, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void accountComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountComboBoxActionPerformed
        // TODO add your handling code here:
        String selectedItem = (String) accountComboBox.getSelectedItem();

        if (selectedItem.equals("Checkings Account")) {
            balanceText.setText("$" + String.valueOf(user.getCheckingsBalance()));
        }
        else {
            balanceText.setText("$" + String.valueOf(user.getSavingsBalance()));
        }
    }//GEN-LAST:event_accountComboBoxActionPerformed

    private void optionMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionMenuButtonActionPerformed
        // TODO add your handling code here:
        TransactionMenu login = new TransactionMenu(user, users);
        login.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_optionMenuButtonActionPerformed

    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed
        // TODO add your handling code here:


        ButtonModel selected = group.getSelection();
        String selectedItem = null;
        String value = null;
        if (selected == null) {
            JOptionPane.showMessageDialog(this, "Missing Information");
        } else {
            value = selected.getActionCommand();
            selectedItem = (String) accountComboBox.getSelectedItem();
            if (selectedItem.equals("Checkings Account")) {
                if(withdrawCheckings(user,value).equals("Insufficient Funds")){
                    JOptionPane.showMessageDialog(this, "Insufficient Funds");
                }else {
                    user.setCheckingsBalance(Integer.parseInt(withdrawCheckings(user, value)));
                    addToTransactionHistoryCheckings("$" +value);
                }
                balanceText.setText("$" + String.valueOf(user.getCheckingsBalance()));
            }else{
                if(withdrawSavings(user,value).equals("Insufficient Funds")){
                    JOptionPane.showMessageDialog(this, "Insufficient Funds");
                }else {
                    user.setSavingsBalance(Integer.parseInt(withdrawSavings(user, value)));
                    addToTransactionHistorySavings("$" +value);
                }
                balanceText.setText("$" + String.valueOf(user.getSavingsBalance()));
            }
        }
    }//GEN-LAST:event_confirmButtonActionPerformed


    public String withdrawCheckings(User user,String value){
        Integer balance= user.getCheckingsBalance();
        switch (value) {
            case "20":
                if (balance - 20 >= 0){
                    balance = balance - 20;
                } else {
                    return "Insufficient Funds";
                }
                break;
            case "40":
                if (balance - 40 >= 0){
                    balance=balance- 40;
                } else {
                    return "Insufficient Funds";
                }
                break;
            case "80":
                if (balance - 80 >= 0){
                    balance=balance- 80;
                } else {
                    return "Insufficient Funds";
                }
                break;
            case "100":
                if (balance - 100 >= 0){
                    balance=balance - 100;
                } else {
                    return "Insufficient Funds";
                }
                break;
            case "200":
                if (balance - 200 >= 0){
                    balance=balance - 200;
                } else {
                    return "Insufficient Funds";
                }
                break;
            case "300":
                if (balance - 300 >= 0){
                    balance=balance - 300;
                } else {
                    return "Insufficient Funds";
                }
                break;
        }
            return String.valueOf(balance);
    }
    public String withdrawSavings(User user,String value){
        Integer balance= user.getSavingsBalance();
        switch (value) {
            case "20":
                if (balance - 20 >= 0){
                    balance = balance - 20;
                } else {
                    return "Insufficient Funds";
                }
                break;
            case "40":
                if (balance - 40 >= 0){
                    balance=balance- 40;
                } else {
                    return "Insufficient Funds";
                }
                break;
            case "80":
                if (balance - 80 >= 0){
                    balance=balance- 80;
                } else {
                    return "Insufficient Funds";
                }
                break;
            case "100":
                if (balance - 100 >= 0){
                    balance=balance - 100;
                } else {
                    return "Insufficient Funds";
                }
                break;
            case "200":
                if (balance - 200 >= 0){
                    balance=balance - 200;
                } else {
                    return "Insufficient Funds";
                }
                break;
            case "300":
                if (balance - 300 >= 0){
                    balance=balance - 300;
                } else {
                    return "Insufficient Funds";
                }
                break;
        }
         return String.valueOf(balance);
    }

    public void addToTransactionHistoryCheckings(String value){
        // Get the current date and time
        LocalDateTime now = LocalDateTime.now();

        // Format the date and time as a string
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");
        String formattedDateTime = now.format(formatter);

        try {
            // Open the file in append mode
            FileWriter fw = new FileWriter(user.getTransactionPaper(), true);
            BufferedWriter bw = new BufferedWriter(fw);

            // Append some data to the file
            bw.write("Withdrawn/"+value+"/Checkings/"+formattedDateTime+"\n");

            // Close the writers
            bw.close();
            fw.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    public void addToTransactionHistorySavings(String value){
        // Get the current date and time
        LocalDateTime now = LocalDateTime.now();

        // Format the date and time as a string
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");
        String formattedDateTime = now.format(formatter);

        try {
            // Open the file in append mode
            FileWriter fw = new FileWriter(user.getTransactionPaper(), true);
            BufferedWriter bw = new BufferedWriter(fw);

            // Append some data to the file
            bw.write("Withdrawn/"+value+"/Savings/"+formattedDateTime+"\n");

            // Close the writers
            bw.close();
            fw.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> accountComboBox;
    private javax.swing.JLabel balanceText;
    private javax.swing.JButton confirmButton;
    private javax.swing.JPanel currentBalancePanel;
    private javax.swing.JLabel currentBalanceTitle;
    private javax.swing.JToggleButton eightyButton;
    private javax.swing.JToggleButton fourtyButton;
    private javax.swing.JToggleButton hundredButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JButton optionMenuButton;
    private javax.swing.JToggleButton threeHundredButton;
    private javax.swing.JToggleButton twentyButton;
    private javax.swing.JToggleButton twoHundredButton;
    private javax.swing.JLabel withdrawFromText;
    // End of variables declaration//GEN-END:variables
}
